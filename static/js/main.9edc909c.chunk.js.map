{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/SearchField/SearchField.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","title","description","className","src","alt","href","MoviesList","movies","map","imdbId","SearchField","filterBy","type","id","placeholder","onChange","event","target","value","App","useState","query","setQuery","visibleMovies","searchCondition","toLowerCase","trim","filter","includes","getPreparedMovies","moviesFromServer","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"+tEAEaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExBC,EAIED,EAJFC,QACAC,EAGEF,EAHFE,OACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,YAGF,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKJ,EAAQK,IAAI,kBAI1B,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBC,IAAI,aAIzC,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BF,SAI/B,sBAAKE,UAAU,UAAf,UACGD,EACD,uBACA,mBAAGI,KAAMP,EAAT,4BC/BGQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,c,OCNfC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKT,UAAU,UAAf,SACE,uBACEU,KAAK,OACLC,GAAG,eACHX,UAAU,QACVY,YAAY,mBACZC,SAAU,SAACC,GACTL,EAASK,EAAMC,OAAOC,aCYvB,IAAMC,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAfR,SAA2BhB,EAAQc,GACjC,IAAKA,EACH,OAAOd,EAGT,IAAMiB,EAAkBH,EAAMI,cAAcC,OAE5C,OAAOnB,EAAOoB,QACZ,SAAA9B,GAAK,OAAIA,EAAMG,MAAMyB,cAAcG,SAASJ,IACvC3B,EAAMI,YAAYwB,cAAcG,SAASJ,MAM1BK,CAAkBC,EAAkBT,GAE1D,OACE,sBAAKnB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAO6B,QAAQ,eAAe7B,UAAU,QAAxC,0BAIA,cAAC,EAAD,CAAaS,SAAUW,SAI3B,cAAC,EAAD,CAAYf,OAAQgB,OAGtB,qBAAKrB,UAAU,UAAf,mCCrCN8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9edc909c.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    imdbUrl,\n    imgUrl,\n    title,\n    description,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img src={imgUrl} alt=\"Film logo\" />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n            </figure>\n          </div>\n\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const SearchField = ({ filterBy }) => (\n  <div className=\"control\">\n    <input\n      type=\"text\"\n      id=\"search-query\"\n      className=\"input\"\n      placeholder=\"Type search word\"\n      onChange={(event) => {\n        filterBy(event.target.value);\n      }}\n    />\n  </div>\n);\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchField } from './components/SearchField/SearchField';\n\nfunction getPreparedMovies(movies, query) {\n  if (!query) {\n    return movies;\n  }\n\n  const searchCondition = query.toLowerCase().trim();\n\n  return movies.filter(\n    movie => movie.title.toLowerCase().includes(searchCondition)\n      || movie.description.toLowerCase().includes(searchCondition),\n  );\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getPreparedMovies(moviesFromServer, query);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <SearchField filterBy={setQuery} />\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}